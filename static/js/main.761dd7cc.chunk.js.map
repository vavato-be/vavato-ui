{"version":3,"sources":["../../src/ui/Card.js","../../src/ui/Button.js","../../src/ui/VavatoTheme.js","../../src/ui/constants.js","../../src/ui/utils.js","../../src/ui/ButtonWithIcon.js","../../src/ui/StyleGuide/ButtonStyleGuide.js","../../src/ui/StyleGuide/CardStyleGuide.js","../../src/ui/Table.js","../../src/ui/Label.js","../../src/ui/Dropdown.js","../../src/ui/EllipsisMenu.js","../../src/ui/LinkWithIcon.js","../../src/ui/StyleGuide/TableStyleGuide.js","../../src/ui/StyleGuide/LabelStyleGuide.js","../../src/ui/Badge.js","../../src/ui/StyleGuide/BadgeStyleGuide.js","../../src/ui/Checkbox.js","../../src/ui/SearchField.js","../../src/ui/StyleGuide/FormStyleGuide.js","../../src/ui/ActionPopover.js","../../src/ui/StyleGuide/ActionPopoverStyleGuide.js","../../src/ui/StyleGuide/EllipsisMenuStyleGuide.js","../../src/ui/Breadcrumbs.js","../../src/ui/StyleGuide/BreadcrumbsStyleGuide.js","../../src/ui/Tooltip.js","../../src/ui/StyleGuide/TooltipStyleGuide.js","../../src/ui/ToasterContext.js","../../src/ui/Toaster.js","../../src/ui/StyleGuide/ToasterStyleGuide.js","../../src/ui/Loader.js","../../src/ui/StyleGuide/LoaderStyleGuide.js","../../src/ui/StyleGuide/StyleGuide.js","../../src/ui/EnvContext.js","../../src/ui/Autocomplete.js","../../src/ui/DropdownButton.js","../../src/ui/GlobalStyle.js","../../src/ui/ToasterViewport.js","../../src/ui/ToasterManager.js","../../src/ui/FoldablePanel.js","../../src/ui/FormField.js","../../src/ui/RadioButton.js","../../src/ui/Switch.js","App.js","index.js"],"names":["Card","styled","props","Button","type","darken","lighten","VavatoTheme","primary","secondary","background","text","lightText","cardBackground","tableHeaders","success","error","info","navbarWidth","colors","UNSAFE_PROPS","safeProps","Object","StyledIcon","StyledButton","Content","ButtonWithIcon","icon","haslabel","length","ButtonStyleGuide","className","onClick","alert","faCoffee","CardStyleGuide","Table","rgba","Label","Menu","Dropdown","children","open","key","Container","EllipsisMenu","useState","setOpen","container","useRef","event","setTimeout","menu","top","left","bottom","right","width","height","newTop","newLeft","document","positionMenu","useEffect","handler","e","ref","openDropdown","role","faEllipsisV","Link","LinkWithIcon","TableStyleGuide","i","href","map","dataRow","LabelStyleGuide","Badge","BadgeStyleGuide","faCheck","faTimes","faInfo","Input","Checkbox","checked","setChecked","onChange","currentTarget","handleChange","iconAnimation","keyframes","iconCloseAnimation","inputAnimation","inputCloseAnimation","SearchField","input","focused","setFocused","onFocus","onBlur","FormStyleGuide","search","setSearch","name","id","value","placeholder","Close","ActionPopover","cancel","faHeart","EllipsisMenuStyleGuide","Breadcrumbs","BreadcrumbsStyleGuide","Popup","Tooltip","faCommentDots","popup","positionPopup","onMouseEnter","showPopup","onMouseLeave","React","Title","Toaster","uid","duration","useContext","dismiss","toasters","timer","setTimer","close","timeout","clearTimeout","ToasterStyleGuide","context","Loader","big","message","spin","size","css","transparentize","cssProperty","options","includeColors","excludeColors","color","none","themeColors","inherit","console","colorValue","applyColors","LoaderWrapper","LoaderStyleguide","style","marginBottom","active","NavBar","NavLinkList","NavLinkListItem","StyleGuide","guides","button","card","table","label","badge","form","action","breadcrumbs","tooltip","ellipsis","loader","toaster","component","createGlobalStyle","ICONS","faInfoCircle","ToastersDisplay","ToasterViewport","onDismiss","renderToaster","nextKey","ToasterManager","setToasters","entry","parseInt","ToasterContext","buildToaster","newToasters","App","theme","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.761dd7cc.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Card = styled.div`\n  background: ${(props) => props.theme.cardBackground};\n  padding: 16px 24px;\n  text-align: left;\n  border-radius: 5px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  margin-bottom: 16px;\n\n  & .title {\n    color: ${(props) => props.theme.text};\n    font-weight: 700;\n    font-size: 18px;\n    margin-bottom: 16px;\n  }\n\n  &.raise-on-hover:hover {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n\n  &.card-2 {\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  }\n\n  &.card-3 {\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  }\n\n  &.card-4 {\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n\n  &.card-5 {\n    box-shadow: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n  }\n`\n\nexport default Card\n","import styled from 'styled-components'\nimport { lighten, darken } from 'polished'\n\nconst Button = styled.button.attrs((props) => ({ type: 'button' }))`\n  background: ${(props) =>\n    props.primary ? props.theme.primary : props.theme.secondary};\n  border: 2px solid\n    ${(props) => (props.primary ? props.theme.primary : props.theme.secondary)};\n  color: ${(props) => props.theme.lightText};\n  padding: 5px 13px;\n  line-height: 32px;\n  font-family: Roboto, sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  text-align: center;\n  cursor: pointer;\n  margin: 8px;\n  letter-spacing: 2px;\n  text-transform: uppercase;\n\n  &.outline {\n    background: none;\n    color: ${(props) =>\n      props.primary ? props.theme.primary : props.theme.secondary};\n  }\n\n  &:hover {\n    background: ${(props) =>\n      darken(0.2, props.primary ? props.theme.primary : props.theme.secondary)};\n    border: 2px solid\n      ${(props) =>\n        darken(\n          0.2,\n          props.primary ? props.theme.primary : props.theme.secondary\n        )};\n    transition: 0.5s ease-out;\n  }\n\n  &[disabled],\n  &[disabled]:hover {\n    background: ${(props) =>\n      lighten(\n        0.2,\n        props.primary ? props.theme.primary : props.theme.secondary\n      )};\n    border: 2px solid\n      ${(props) =>\n        lighten(\n          0.2,\n          props.primary ? props.theme.primary : props.theme.secondary\n        )};\n    cursor: not-allowed;\n  }\n`\n\nexport default Button\n","const VavatoTheme = {\n  primary: '#a29060',\n  secondary: '#6192a1',\n  background: '#f6f6f6',\n  text: '#595a5C',\n  lightText: '#f6f6f6',\n  cardBackground: '#fff',\n  tableHeaders: '#a8a8a8',\n  success: '#259b11',\n  error: '#B61e39',\n  info: '#6092a2',\n  navbarWidth: 330\n}\n\nexport default VavatoTheme\n","import VavatoTheme from './VavatoTheme'\n\nexport const fontSizes = {\n  bodyLarge: '1.125rem',\n  body: '1rem',\n  bodySmall: '0.92rem',\n  small: '0.85rem',\n  h1: '3rem',\n  h2: '1.75rem',\n  h3: '1.6rem',\n  h4: '1.375rem',\n  h5: '1.125rem',\n  h6: '1rem'\n}\n\nexport const fontWeights = {\n  bold: '600',\n  semiBold: '500',\n  regular: '400'\n}\n\nexport const colors = {\n  primary: VavatoTheme.primary,\n  secondary: VavatoTheme.secondary,\n  success: VavatoTheme.success,\n  error: VavatoTheme.error,\n  info: VavatoTheme.info\n}\n","import { colors as themeColors } from './constants'\n\nconst UNSAFE_PROPS = ['children', 'ref', 'forwardedRef']\n\nfunction safeProps(props) {\n  const safeProps = Object.assign({}, props)\n  UNSAFE_PROPS.forEach((prop) => delete safeProps[prop])\n  return safeProps\n}\n\nfunction applyColors(cssProperty, options) {\n  const { include: includeColors, exclude: excludeColors } = options || {}\n\n  return ({ color }) => {\n    if (!color) return null\n\n    // extends our availible colors with 'none' and 'inherit'\n    const colors = {\n      ...themeColors,\n      none: themeColors.interface,\n      inherit: 'inherit'\n    }\n\n    if (!colors[color]) {\n      return console.warn(\n        `Color '${color}' passed to 'useColorsOn' not defined in constants.`\n      )\n    }\n\n    if (excludeColors && excludeColors.includes(color)) {\n      console.warn(\n        `Color '${color}' passed to 'useColorsOn' is explicitly excluded`\n      )\n      return null\n    }\n\n    if (includeColors && !includeColors.includes(color)) {\n      console.warn(\n        `Color '${color}' passed to 'useColorsOn' is explicitly NOT included`\n      )\n      return null\n    }\n\n    const colorValue = !colors[color]\n      ? colors.secondary\n      : colors[color].primary || colors[color]\n\n    return `\n      ${cssProperty}: ${colorValue};\n    `\n  }\n}\n\nfunction extractPagination(headers) {\n  const currentPage = headers.get('X-Page')\n  const itemsPerPage = headers.get('X-Per-Page')\n  const totalItems = headers.get('X-Total')\n  return {\n    current: currentPage,\n    total: Math.ceil(totalItems / itemsPerPage),\n    total_records: totalItems\n  }\n}\n\nfunction extractLinks(string) {\n  function parseLink(rawLinkPair) {\n    const [rawLink, rawRel] = rawLinkPair.split(';')\n    const link = rawLink.slice(1, -1)\n    const rel = rawRel.match(/rel=\"(.*?)\"/)[1]\n    return { link: link, tag: rel }\n  }\n\n  const links = {}\n  if (string) {\n    string.split(',').forEach((rawLink) => {\n      const parsedLinkObject = parseLink(rawLink.trim())\n      links[parsedLinkObject.tag] = parsedLinkObject.link\n    })\n  }\n  return links\n}\n\nexport { safeProps, applyColors, extractLinks, extractPagination }\n","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport Button from './Button'\nimport { safeProps } from './utils'\n\nconst StyledIcon = styled(FontAwesomeIcon)`\n  margin-right: ${(props) => (props.haslabel ? '16px' : '0')};\n`\nconst StyledButton = styled(Button)`\n  width: ${(props) => (props.children.length ? '130px' : 'auto')};\n  line-height: 1.1em;\n  height: 46px;\n  border-bottom-width: 5px;\n`\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-spacing: space-between;\n  align-items: center;\n\n  & span {\n    flex: 1;\n    text-align: center;\n  }\n`\n\nfunction ButtonWithIcon(props) {\n  const { icon } = props\n\n  return (\n    <StyledButton {...safeProps(props)}>\n      <Content>\n        <StyledIcon\n          icon={icon}\n          haslabel={props.children && props.children.length}\n        />\n        {props.children && props.children.length ? (\n          <span>{props.children}</span>\n        ) : (\n          []\n        )}\n      </Content>\n    </StyledButton>\n  )\n}\n\nexport default ButtonWithIcon\n","import React from 'react'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nimport Card from '../Card'\nimport Button from '../Button'\nimport ButtonWithIcon from '../ButtonWithIcon'\n\nfunction ButtonStyleGuide() {\n  return (\n    <Card>\n      <div className='title'>&lt;Button&gt;</div>\n      <p>\n        Just a regular HTML <span className='pre'>button</span> with styling\n        applied.\n      </p>\n      <Card>\n        <Button onClick={() => alert('Clicked')}>Click me</Button>\n        <Button className='outline'>Outline</Button>\n        <ButtonWithIcon icon={faCoffee}>Take a break</ButtonWithIcon>\n      </Card>\n    </Card>\n  )\n}\n\nexport default ButtonStyleGuide\n","import React from 'react'\nimport Card from '../Card'\n\nfunction CardStyleGuide() {\n  return (\n    <Card>\n      <div className='title'>&lt;Card&gt;</div>\n      <p>A raised element representing an item in a list or a section.</p>\n      <Card>\n        <div className='title'>A card has a title with className title</div>\n        <div>And a body without any special classes</div>\n      </Card>\n      <Card className='raise-on-hover'>\n        <div className='title'>&lt;Card className=raise-on-hover&gt;</div>\n        <div>\n          When class raise-on-hover is present, the card will raise in elevation\n          when hovered\n        </div>\n      </Card>\n      <Card className='card-2'>\n        <div className='title'>&lt;Card className=card-2&gt;</div>\n        <div>\n          A card may have different elevations with classes card-2, card-3,\n          card-4 and card-5\n        </div>\n      </Card>\n      <Card className='card-3'>\n        <div className='title'>&lt;Card className=card-3&gt;</div>\n        <div>\n          A card may have different elevations with classes card-2, card-3,\n          card-4 and card-5\n        </div>\n      </Card>\n      <Card className='card-4'>\n        <div className='title'>&lt;Card className=card-4&gt;</div>\n        <div>\n          A card may have different elevations with classes card-2, card-3,\n          card-4 and card-5\n        </div>\n      </Card>\n      <Card className='card-5'>\n        <div className='title'>&lt;Card className=card-5&gt;</div>\n        <div>\n          A card may have different elevations with classes card-2, card-3,\n          card-4 and card-5\n        </div>\n      </Card>\n    </Card>\n  )\n}\n\nexport default CardStyleGuide\n","import styled from 'styled-components'\nimport { rgba } from 'polished'\n\nconst Table = styled.table`\n  width: 100%;\n  margin: 16px 0;\n  border-spacing: 0;\n  border-collapse: collapse;\n  border: none;\n\n  & thead td,\n  & thead th {\n    text-align: left;\n    font-weight: bold;\n    font-size: 14px;\n    text-transform: uppercase;\n    color: ${(props) => props.theme.tableHeaders};\n    padding: 0 8px;\n    border: none;\n    background: #fff;\n  }\n\n  & tbody tr:nth-child(odd) {\n    background: ${(props) => props.theme.background};\n  }\n\n  & tr {\n    height: 54px;\n    border: none;\n  }\n\n  & td,\n  & th {\n    border: none !important;\n  }\n\n  & tbody tr.active {\n    background: ${(props) => rgba(props.theme.secondary, 0.1)};\n  }\n\n  & tbody td,\n  & tfoot td {\n    font-size: 12px;\n    text-align: left;\n    padding: 0 8px;\n  }\n\n  & td:last-child() {\n    padding-right: 0;\n  }\n\n  & td.number,\n  & th.number {\n    text-align: right;\n  }\n\n  & td a {\n    color: #000 !important;\n    font-weight: 700;\n    text-decoration: underline;\n  }\n\n  & td.total {\n    font-weight: 700;\n    text-align: right;\n  }\n`\n\nexport default Table\n","import styled from 'styled-components'\nimport { rgba } from 'polished'\n\nconst Label = styled.span`\n  display: inline-block;\n  background: ${(props) => rgba(props.theme.text, 0.2)};\n  padding: 4px 8px;\n  min-width: 70px;\n  color: ${(props) => props.theme.text};\n  text-align: center;\n  margin: 4px 8px 4px 0px;\n  border-radius: 18px;\n  font-size: 11px;\n  line-height: 15px;\n  font-weight: 700;\n  text-transform: uppercase;\n  box-sizing: content-box;\n\n  &.primary {\n    background: ${(props) => rgba(props.theme.primary, 0.2)};\n    color: ${(props) => props.theme.primary};\n  }\n\n  &.secondary {\n    background: ${(props) => rgba(props.theme.secondary, 0.2)};\n    color: ${(props) => props.theme.secondary};\n  }\n\n  &.success {\n    background: ${(props) => rgba(props.theme.success, 0.2)};\n    color: ${(props) => props.theme.success};\n  }\n\n  &.error {\n    background: ${(props) => rgba(props.theme.error, 0.2)};\n    color: ${(props) => props.theme.error};\n  }\n\n  &.info {\n    background: ${(props) => rgba(props.theme.info, 0.2)};\n    color: ${(props) => props.theme.info};\n  }\n`\n\nexport default Label\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Menu = styled.nav`\n  visibility: ${(props) => (props.open ? 'visible' : 'hidden')};\n  ${(props) => (props.open ? 'display: flex;' : '')}\n  background: white;\n  position: fixed;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  padding: 24px 16px;\n  min-width: 300px;\n  overflow-y: auto;\n  z-index: 3;\n\n  & > ul {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    margin: 0;\n    padding: 0;\n    text-indent: 0;\n    list-style-type: none;\n  }\n\n  & > ul li {\n    flex: 1;\n    display: flex;\n    cursor: pointer;\n  }\n\n  & > ul li a,\n  & > ul li a:active,\n  & > ul li a:visited,\n  & > ul li a:hover {\n    color: #000;\n    text-decoration: none;\n    font-size: 14px;\n    font-weight: 400;\n  }\n\n  & li:hover {\n    background: ${(props) => props.theme.background};\n  }\n`\n\nfunction Dropdown({ children, open, className }) {\n  function renderChildren() {\n    if (!children) {\n      return []\n    }\n    if (!children.length) {\n      return <li>{children}</li>\n    }\n    return children.map((child) => (\n      <li key={children.indexOf(child)}>{child}</li>\n    ))\n  }\n  return (\n    <Menu className='className' open={open}>\n      <ul className='unstyled'>{renderChildren()}</ul>\n    </Menu>\n  )\n}\n\nexport default Dropdown\n","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\n\nimport Dropdown from './Dropdown'\n\nconst Container = styled.div`\n  text-align: right;\n  color: ${(props) => props.theme.tableHeaders};\n  font-size: 20px;\n  font-weight: 400;\n  margin-right: 8px;\n`\n\nfunction EllipsisMenu({ children }) {\n  const [open, setOpen] = useState(false)\n  const container = useRef(null)\n\n  useEffect(() => {\n    const handler = (e) => {\n      if (open && container.current && !container.current.contains(e.target)) {\n        setOpen(false)\n      }\n    }\n\n    document.addEventListener('click', handler)\n    return () => document.removeEventListener('click', handler)\n  })\n\n  function openDropdown(event) {\n    event.preventDefault()\n    event.stopPropagation()\n    const container = event.currentTarget\n    setOpen(!open)\n    if (open) {\n      return\n    }\n\n    // Need to wait for the browser to render to get menu dimensions\n    setTimeout(() => positionMenu(container))\n  }\n\n  /* TODO: Use refs instead of currentTarget and queries.\n   *       I tried doing this here but ran into trouble\n   *       with forwardedRefs in children. Need to research\n   *       how other libraries do it.\n   */\n  function positionMenu(container) {\n    const menu = container.querySelector('nav')\n\n    const { top, left, bottom, right } = container.getBoundingClientRect()\n    const { width, height } = menu.getBoundingClientRect()\n\n    let newTop = bottom - 5\n    let newLeft = right - width + 5\n\n    if (newTop + height > document.documentElement.clientHeight) {\n      newTop = top - height\n    }\n\n    if (newLeft + width > document.documentElement.clientWidth) {\n      newLeft = left - width\n    }\n\n    menu.style.left = `${newLeft}px`\n    menu.style.top = `${newTop}px`\n  }\n\n  return (\n    <Container ref={container} onClick={(e) => openDropdown(e)} role='button'>\n      <FontAwesomeIcon icon={faEllipsisV} />\n      <Dropdown className='dropdown-menu' open={open} role='navigation'>\n        {children}\n      </Dropdown>\n    </Container>\n  )\n}\n\nexport default EllipsisMenu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nimport { safeProps } from './utils'\n\nconst Link = styled.a`\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  line-height: 48px;\n\n  & > svg {\n    margin-right: 16px;\n  }\n\n  & > span {\n    flex: 1;\n  }\n`\n\nfunction LinkWithIcon(props) {\n  const { icon } = props\n  return (\n    <Link {...safeProps(props)}>\n      <FontAwesomeIcon icon={icon} />\n      <span>{props.children}</span>\n    </Link>\n  )\n}\n\nexport default LinkWithIcon\n","import React from 'react'\nimport Card from '../Card'\nimport Table from '../Table'\nimport Label from '../Label'\nimport EllipsisMenu from '../EllipsisMenu'\nimport LinkWithIcon from '../LinkWithIcon'\nimport { faCoffee, faTruck } from '@fortawesome/free-solid-svg-icons'\n\nfunction TableStyleGuide() {\n  function dataRow(i) {\n    return (\n      <tr key={i} className={i === 3 ? 'active' : null}>\n        <td>Data 1</td>\n        <td>\n          <Label className='primary'>PRIMARY</Label>\n        </td>\n        <td>Data 2</td>\n        <td>\n          <a href='/'>Link</a>\n        </td>\n        <td className='number'>€900,00</td>\n        <td>\n          <EllipsisMenu>{ellipsisContent()}</EllipsisMenu>\n        </td>\n      </tr>\n    )\n  }\n\n  function ellipsisContent() {\n    return [\n      <LinkWithIcon\n        icon={faCoffee}\n        key='coffee'\n        onClick={() => alert(\"Here's your coffee\")}\n      >\n        Take a break\n      </LinkWithIcon>,\n      <LinkWithIcon\n        icon={faTruck}\n        key='truck'\n        onClick={() => alert('A trucker stops by. He looks tired.')}\n      >\n        Hitch a hike\n      </LinkWithIcon>\n    ]\n  }\n\n  return (\n    <Card>\n      <div className='title'>&lt;Table&gt;</div>\n      <p>\n        Just a regular HTML <span className='pre'>table</span> with styling\n        applied.\n      </p>\n      <Card>\n        <Table>\n          <thead>\n            <tr>\n              <td>Header 1</td>\n              <td>Label</td>\n              <td>Header 2</td>\n              <td>Link</td>\n              <td className='number'>Number</td>\n              <td>&nbsp;</td>\n            </tr>\n          </thead>\n          <tbody>\n            {[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((i) => dataRow(i))}\n          </tbody>\n        </Table>\n      </Card>\n    </Card>\n  )\n}\n\nexport default TableStyleGuide\n","import React from 'react'\nimport Card from '../Card'\nimport Label from '../Label'\n\nfunction LabelStyleGuide() {\n  return (\n    <Card>\n      <div className='title'>&lt;Label&gt;</div>\n      <p>A round label representing usually status or tags.</p>\n      <Card>\n        <ul>\n          <li>\n            <Label>default</Label>with no class applied\n          </li>\n          <li>\n            <Label className='primary'>primary</Label>\n            with the \"primary\" className\n          </li>\n          <li>\n            <Label className='secondary'>secondary</Label>\n            with the \"secondary\" className\n          </li>\n          <li>\n            <Label className='success'>success</Label>\n            with the \"success\" className\n          </li>\n          <li>\n            <Label className='error'>error</Label>\n            with the \"error\" className\n          </li>\n          <li>\n            <Label className='info'>info</Label>\n            with the \"info\" className\n          </li>\n        </ul>\n      </Card>\n    </Card>\n  )\n}\n\nexport default LabelStyleGuide\n","import styled from 'styled-components'\n\nconst Badge = styled.span`\n  display: inline-block;\n  font-family: sans-serif;\n  background: ${(props) => props.theme.error};\n  padding: 4px;\n  max-width: 40px;\n  color: ${(props) => props.theme.lightText};\n  text-align: center;\n  margin: 4px 8px -5px 0px;\n  border-radius: 20px;\n  font-size: 11px;\n  line-height: 15px;\n  font-weight: 700;\n  text-transform: uppercase;\n  width: 15px;\n  max-width: 15px;\n  overflow: hidden;\n  box-sizing: content-box;\n\n  &.primary {\n    color: ${(props) => props.theme.lightText};\n    background: ${(props) => props.theme.primary};\n  }\n\n  &.secondary {\n    color: ${(props) => props.theme.lightText};\n    background: ${(props) => props.theme.secondary};\n  }\n\n  &.success {\n    background: ${(props) => props.theme.success};\n  }\n\n  &.error {\n    background: ${(props) => props.theme.error};\n  }\n\n  &.info {\n    background: ${(props) => props.theme.info};\n  }\n`\n\nexport default Badge\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faTimes, faInfo } from '@fortawesome/free-solid-svg-icons'\n\nimport Card from '../Card'\nimport Badge from '../Badge'\n\nfunction BadgeStyleGuide() {\n  return (\n    <Card>\n      <div className='title'>&lt;Badge&gt;</div>\n      <p>\n        A round circle representing usually number of pending notifications.\n      </p>\n      <Card>\n        <ul>\n          <li>\n            <Badge>1</Badge>with no class applied\n          </li>\n          <li>\n            <Badge className='primary'>11</Badge>\n            with the \"primary\" className\n          </li>\n          <li>\n            <Badge className='secondary'>111</Badge>\n            with the \"secondary\" className\n          </li>\n          <li>\n            <Badge className='success'>\n              <FontAwesomeIcon icon={faCheck} />\n            </Badge>\n            with the \"success\" className\n          </li>\n          <li>\n            <Badge className='error'>\n              <FontAwesomeIcon icon={faTimes} />\n            </Badge>\n            with the \"error\" className\n          </li>\n          <li>\n            <Badge className='info'>\n              <FontAwesomeIcon icon={faInfo} />\n            </Badge>\n            with the \"info\" className\n          </li>\n        </ul>\n      </Card>\n    </Card>\n  )\n}\n\nexport default BadgeStyleGuide\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { safeProps } from './utils'\n\nconst Input = styled.input.attrs((props) => ({\n  type: 'checkbox'\n}))`\n  display: inline-block;\n  float: left;\n  background: #ffffff;\n  border: 2px solid #c4c4c4;\n  border-radius: 5px;\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n  width: 25px;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  -o-appearance: none;\n  appearance: none;\n  outline: none;\n  transition-duration: 0.3s;\n  cursor: pointer;\n\n  &:checked {\n    border: 1px solid ${(props) => props.theme.text};\n    background-color: ${(props) => props.theme.secondary};\n  }\n\n  &:active {\n    background-color: ${(props) => props.theme.secondary};\n    border: 2px solid ${(props) => props.theme.primary};\n  }\n`\n\nconst Label = styled.label`\n  line-height: 24px;\n\n  & .checkmark-react,\n  .exported-component & .checkmark-react {\n    background: ${(props) => props.theme.secondary};\n    cursor: pointer;\n    position: relative;\n    margin-left: -28px;\n    color: white;\n    font-size: 18px;\n    font-weight: bold;\n    margin-right: 12px;\n  }\n`\n\nfunction Checkbox(props) {\n  const [checked, setChecked] = useState(props.value || false)\n\n  function handleChange({ currentTarget }) {\n    setChecked(currentTarget.checked)\n    if (props.onChange) {\n      props.onChange(currentTarget.checked)\n    }\n  }\n\n  return (\n    <Label>\n      <Input\n        {...safeProps(props)}\n        checked={checked}\n        onChange={(e) => handleChange(e)}\n      />\n      {checked ? <span className='checkmark-react'>&#x2713;</span> : null}\n      <span>{props.children}</span>\n    </Label>\n  )\n}\n\nexport default Checkbox\n","import React, { useRef, useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { rgba } from 'polished'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nimport { safeProps } from './utils'\n\nconst iconAnimation = keyframes`\n  from {\n    margin-right: 278px;\n  }\n\n  to {\n    margin-right: calc(100% - 28px);\n  }\n`\nconst iconCloseAnimation = keyframes`\n  from {\n    margin-right: calc(100% - 28px);\n  }\n\n  to {\n    margin-right: 278px;\n  }\n`\n\nconst inputAnimation = keyframes`\n  from {\n    flex: none;\n  }\n\n  to {\n    flex: 1;\n  }\n`\nconst inputCloseAnimation = keyframes`\n  from {\n    flex: 1;\n  }\n\n  to {\n    flex: none;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  position: relative;\n  height: 37px;\n  font-size: 14px;\n  color: ${(props) => rgba(props.theme.text, 0.4)};\n\n  & > svg {\n    height: 37px;\n    margin-left: 12px;\n    position: absolute;\n    margin-right: 278px;\n    animation: ${iconCloseAnimation} 0.5s ease-out;\n  }\n\n  &.focused > svg {\n    animation: ${iconAnimation} 0.5s ease-out;\n    margin-right: calc(100% - 28px);\n  }\n`\nconst Input = styled.input.attrs(() => {\n  'text'\n})`\n  flex: none;\n  width: 250px;\n  border: 2px solid ${(props) => rgba(props.theme.text, 0.4)};\n  padding: 8px 16px 8px 36px;\n  font-size: 13px;\n  animation: ${inputCloseAnimation} 0.5s ease-out;\n  border-radius: 5px;\n\n  &::placeholder {\n    color: ${(props) => rgba(props.theme.text, 0.4)};\n  }\n\n  &:focus,\n  &:active {\n    outline: none;\n    flex: 1;\n    width: auto;\n    border: 2px solid ${(props) => rgba(props.theme.text, 0.7)};\n    animation: ${inputAnimation} 0.5s ease-out;\n  }\n`\n\nfunction SearchField(props) {\n  const input = useRef(null)\n  const [focused, setFocused] = useState(false)\n\n  function emitChange() {\n    if (!props.onChange) {\n      return\n    }\n\n    props.onChange(input.current.value)\n  }\n\n  return (\n    <Container focused={focused} className={focused ? 'focused' : ''}>\n      <FontAwesomeIcon icon={faSearch} onClick={() => input.current.focus()} />\n      <Input\n        ref={input}\n        {...safeProps(props)}\n        onFocus={() => setFocused(true)}\n        onBlur={() => setFocused(false)}\n        onChange={(e) => emitChange()}\n      />\n    </Container>\n  )\n}\n\nexport default SearchField\n","import React, { useState } from 'react'\nimport Card from '../Card'\nimport Checkbox from '../Checkbox'\nimport SearchField from '../SearchField'\n\nfunction FormStyleGuide() {\n  const [checked, setChecked] = useState(false)\n  const [search, setSearch] = useState('')\n\n  function handleCheckboxChanged(value) {\n    setChecked(value)\n  }\n\n  return (\n    <Card>\n      <div className='title'>Form Controls</div>\n      <p>Elements to create forms with.</p>\n      <Card>\n        <div className='title'>&lt;Checkbox&gt;</div>\n        <p>\n          A custom styled checkbox. Accepts binding to{' '}\n          <span className='pre'>value</span> and &nbsp;\n          <span className='pre'>onChange</span>. Props are passed to the\n          underlying &nbsp;<span className='pre'>&lt;input&gt;</span>\n        </p>\n        <Checkbox\n          name='checkbox'\n          id='checkbox'\n          value={checked}\n          onChange={(e) => handleCheckboxChanged(e)}\n        >\n          Accept terms and conditions\n        </Checkbox>\n        <p>Value: {checked.toString()}</p>\n      </Card>\n      <Card>\n        <div className='title'>&lt;SearchField&gt;</div>\n        <p>\n          An input field formatted as a search box that automatically expands\n          when focused.\n        </p>\n        <SearchField\n          placeholder='Search for anything you might want, like a payment request or an invoice.'\n          onChange={(value) => setSearch(value)}\n        />\n        <p>Value: {search}</p>\n      </Card>\n    </Card>\n  )\n}\n\nexport default FormStyleGuide\n","import React from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\n\nconst Menu = styled.div`\n  display: ${(props) => (props.open ? 'flex' : 'none')};\n  background: white;\n  position: absolute;\n  left: 10%;\n  right: 10%;\n  bottom: 0;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  padding: 8px 32px;\n  z-index: 5;\n  flex-direction: row;\n  flex-spacing: space-between;\n  align-items: center;\n  font-size: 18px;\n\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Close = styled.span`\n  cursor: pointer;\n  font-size: 24px;\n  margin-right: 32px;\n`\n\nfunction ActionPopover({ children, open, cancel }) {\n  return (\n    <Menu open={open}>\n      <Close onClick={() => (cancel ? cancel() : null)}>\n        <FontAwesomeIcon icon={faTimes} />\n      </Close>\n      {children}\n    </Menu>\n  )\n}\n\nexport default ActionPopover\n","import React, { useState } from 'react'\nimport Card from '../Card'\nimport ButtonWithIcon from '../ButtonWithIcon'\nimport ActionPopover from '../ActionPopover'\n\nimport { faHeart, faPlay } from '@fortawesome/free-solid-svg-icons'\n\nfunction ButtonStyleGuide() {\n  const [open, setOpen] = useState()\n\n  return (\n    <Card>\n      <div className='title'>&lt;ActionPopover&gt;</div>\n      <p>\n        An action bar down the bottom of the screen to act on the current\n        context.\n      </p>\n      <Card>\n        <ButtonWithIcon icon={faPlay} onClick={() => setOpen(true)}>\n          START MATCHING\n        </ButtonWithIcon>\n        <ActionPopover cancel={() => setOpen(false)} open={open}>\n          <div>\n            <span className='secondary'>2</span> transactions selected. Select\n            payment request to continue.\n          </div>\n          <ButtonWithIcon icon={faHeart}>MATCH</ButtonWithIcon>\n        </ActionPopover>\n      </Card>\n    </Card>\n  )\n}\n\nexport default ButtonStyleGuide\n","import React from 'react'\nimport Card from '../Card'\nimport EllipsisMenu from '../EllipsisMenu'\nimport LinkWithIcon from '../LinkWithIcon'\n\nimport { faCoffee, faTruck } from '@fortawesome/free-solid-svg-icons'\n\nfunction EllipsisMenuStyleGuide() {\n  return (\n    <Card>\n      <div className='title'>&lt;EllipsisMenu&gt;</div>\n      <p>\n        A vertical ellipsis icon that triggers a dropdown menu.\n        <br />\n        Elements passed in will be show inside the popup inside a list\n      </p>\n      <Card>\n        <EllipsisMenu>\n          <LinkWithIcon\n            icon={faCoffee}\n            key='coffee'\n            onClick={() => alert(\"Here's your coffee\")}\n          >\n            Take a break\n          </LinkWithIcon>\n          <LinkWithIcon\n            icon={faTruck}\n            key='truck'\n            onClick={() => alert('A trucker stops by. He looks tired.')}\n          >\n            Hitch a hike\n          </LinkWithIcon>\n        </EllipsisMenu>\n      </Card>\n    </Card>\n  )\n}\n\nexport default EllipsisMenuStyleGuide\n","import styled from 'styled-components'\nimport { rgba } from 'polished'\n\nconst Breadcrumbs = styled.div`\n  font-size: 10px;\n  color: ${(props) => props.theme.text};\n\n  & a,\n  & a:active,\n  & a:visited,\n  & a:hover,\n  span.active {\n    color: ${(props) => props.theme.text};\n  }\n\n  & a:after {\n    content: '>';\n    padding: 0 4px;\n    color: ${(props) => rgba(props.theme.text, 0.5)};\n  }\n\n  & a:hover {\n    text-decoration: underline;\n  }\n`\nexport default Breadcrumbs\n","import React from 'react'\n\nimport Card from '../Card'\nimport Breadcrumbs from '../Breadcrumbs'\n\nfunction BreadcrumbsStyleGuide() {\n  return (\n    <Card>\n      <div className='title'>&lt;Breadcrumbs&gt;</div>\n      <p>\n        Shows a sequence of links representing the path to the current URL. Does\n        not automatically process browser history.\n      </p>\n      <Card>\n        <Breadcrumbs>\n          <a href='/'>Home</a>\n          <span className='active'>Style Guide</span>\n        </Breadcrumbs>\n      </Card>\n    </Card>\n  )\n}\n\nexport default BreadcrumbsStyleGuide\n","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCommentDots } from '@fortawesome/free-solid-svg-icons'\n\nconst Container = styled.span`\n  padding: 2px 4px;\n  font-size: 12px;\n  color: ${(props) => props.theme.text};\n`\n\nconst Popup = styled.nav`\n  display: ${(props) => (props.open ? 'flex' : 'none')};\n  background: white;\n  position: fixed;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  padding: 24px 16px;\n  z-index: 3;\n`\n\nfunction Tooltip({ icon = faCommentDots, children }) {\n  const [open, setOpen] = useState(false)\n  const container = useRef(null)\n\n  function hidePopup(event) {\n    if (!open) {\n      return\n    }\n    showPopup(event)\n  }\n\n  function showPopup(event) {\n    setOpen(!open)\n\n    if (open) {\n      return\n    }\n\n    // Need to wait for the browser to render to get popup dimensions\n    setTimeout(() => positionPopup())\n  }\n\n  function positionPopup() {\n    const popup = container.current.querySelector('nav')\n\n    const { top, left, right } = container.current.getBoundingClientRect()\n    const { width, height } = popup.getBoundingClientRect()\n\n    let newTop = top - height\n    let newLeft = right - width / 2.0\n\n    if (newTop < 0) {\n      newTop = 0\n    }\n\n    if (newLeft + width > document.documentElement.clientWidth) {\n      newLeft = left - width\n    }\n\n    popup.style.left = `${newLeft}px`\n    popup.style.top = `${newTop}px`\n  }\n\n  return (\n    <Container\n      role='button'\n      ref={container}\n      onMouseEnter={(event) => showPopup(event)}\n      onMouseLeave={(event) => hidePopup(event)}\n    >\n      <FontAwesomeIcon icon={icon} />\n      <Popup role='navigation' open={open}>\n        {children}\n      </Popup>\n    </Container>\n  )\n}\n\nexport default Tooltip\n","import React from 'react'\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons'\n\nimport Card from '../Card'\nimport Tooltip from '../Tooltip'\n\nfunction ButtonStyleGuide() {\n  return (\n    <Card>\n      <div className='title'>&lt;Tooltip&gt;</div>\n      <p>An icon that reveals information in a popup when hovered.</p>\n      <Card>\n        <ul>\n          <li>\n            Without an icon specified\n            <Tooltip>Hi, I'm a very helpful tooltip.</Tooltip>\n          </li>\n          <li>\n            With an icon specified\n            <Tooltip icon={faCoffee}>Here's your cup of joe.</Tooltip>\n          </li>\n        </ul>\n      </Card>\n    </Card>\n  )\n}\n\nexport default ButtonStyleGuide\n","import React from 'react'\n\nexport default React.createContext({})\n","import React, { useContext, useEffect, useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport ToasterContext from './ToasterContext'\n\nconst Container = styled.div`\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  background: #fff;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding: 16px 0px;\n  margin-top: 16px;\n\n  & svg {\n    margin: 0 32px;\n  }\n\n  &.error {\n    border-left: 4px solid ${(props) => props.theme.error};\n  }\n\n  &.error svg {\n    color: ${(props) => props.theme.error};\n  }\n\n  &.error .title {\n    color: ${(props) => props.theme.error};\n  }\n  &.success {\n    border-left: 4px solid ${(props) => props.theme.success};\n  }\n\n  &.success svg {\n    color: ${(props) => props.theme.success};\n  }\n\n  &.success .title {\n    color: ${(props) => props.theme.success};\n  }\n\n  &.info {\n    border-left: 4px solid ${(props) => props.theme.secondary};\n  }\n\n  &.info svg {\n    color: ${(props) => props.theme.secondary};\n  }\n\n  &.info .title {\n    color: ${(props) => props.theme.secondary};\n  }\n`\n\nconst Title = styled.div`\n  font-weight: 700;\n  text-transform: capitalize;\n`\n\nconst Content = styled.div`\n  flex: 1;\n`\n\nconst Close = styled.button`\n  border: 0;\n  background: transparent;\n  font-size: 24px;\n  color: ${(props) => props.theme.text} !important;\n  text-align: right;\n  padding: 0;\n  margin: 0;\n  outline: none;\n\n  & svg {\n    color: ${(props) => props.theme.text} !important;\n  }\n`\n\nfunction Toaster({ icon, type, children, uid, duration = 2000 }) {\n  const { dismiss, toasters } = useContext(ToasterContext)\n  const [timer, setTimer] = useState(false)\n  const close = useRef(null)\n\n  useEffect(() => {\n    if (timer) {\n      return\n    }\n\n    const timeout = setTimeout(() => {\n      close.current.click()\n      setTimer(true)\n    }, duration)\n    return () => clearTimeout(timeout)\n  }, [duration, timer])\n\n  return (\n    <Container className={type}>\n      <FontAwesomeIcon icon={icon} />\n      <Content>\n        <Title className='title'>{type}</Title>\n        {children}\n      </Content>\n      <Close ref={close} onClick={() => dismiss(uid, toasters)}>\n        <FontAwesomeIcon icon={faTimes} />\n      </Close>\n    </Container>\n  )\n}\n\nexport default Toaster\n","import React, { useContext } from 'react'\n\nimport Card from '../Card'\nimport Toaster from '../Toaster'\nimport ToasterContext from '../ToasterContext'\nimport Button from '../Button'\nimport {\n  faInfoCircle,\n  faTimesCircle,\n  faCheckCircle\n} from '@fortawesome/free-solid-svg-icons'\n\nfunction ToasterStyleGuide() {\n  const context = useContext(ToasterContext)\n  const { success, error, info } = context\n\n  return (\n    <Card>\n      <div className='title'>&lt;Toaster&gt; and &lt;ToasterManager&gt;</div>\n      <p>\n        Shows a flash message on the screen for a duration and then disappears.\n      </p>\n      <Card>\n        <Toaster type='info' icon={faInfoCircle} key='1001'>\n          Hi i am a toaster\n        </Toaster>\n        <Toaster type='success' icon={faCheckCircle} key='1002'>\n          Hi i am a toaster\n        </Toaster>\n        <Toaster type='error' icon={faTimesCircle} key='1003'>\n          Hi i am a toaster\n        </Toaster>\n        <p>With ToasterManager in the page</p>\n        <Button onClick={() => success('You are good at clicking')}>\n          Success\n        </Button>\n        <Button onClick={() => info('Please, mind the gap')}>Info</Button>\n        <Button\n          onClick={() => error(\"These are not the droids you're looking for\")}\n        >\n          Error\n        </Button>\n      </Card>\n    </Card>\n  )\n}\n\nexport default ToasterStyleGuide\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { transparentize } from 'polished'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSpinner } from '@fortawesome/free-solid-svg-icons'\nimport { applyColors } from './utils'\n\n// TODO: Kill options, too many, allows for inconsistencies\nconst Loader = styled(({ className, big, message }) => (\n  <div className={className}>\n    <FontAwesomeIcon\n      icon={faSpinner}\n      spin\n      size={big && '2x'}\n      className='circle'\n    />\n    {message && <p>{message}</p>}\n  </div>\n))`\n  position: relative;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  z-index: 5;\n\n  ${({ absolute }) =>\n    absolute &&\n    css`\n      position: absolute;\n    `}\n\n  ${({ overlay }) =>\n    overlay &&\n    css`\n      background-color: ${transparentize(0.15, '#FFFFFF')};\n    `}\n\n  ${({ active }) =>\n    !active &&\n    css`\n      display: none;\n    `}\n\n  .circle {\n    ${applyColors('color')}\n  }\n`\n\nexport default Loader\n","import React from 'react'\nimport styled from 'styled-components'\nimport Card from '../Card'\nimport Loader from '../Loader'\n\nconst LoaderWrapper = styled.div`\n  background-color: #f6f6f6;\n  padding: 10px;\n`\n\nfunction LoaderStyleguide() {\n  return (\n    <Card style={{ marginBottom: '50px' }}>\n      <div className='title'>&lt;Loader&gt;</div>\n      <p>Normal Loader</p>\n      <LoaderWrapper>\n        <Loader active color='info' />\n      </LoaderWrapper>\n      <p>Big Loader</p>\n      <LoaderWrapper>\n        <Loader active big color='info' />\n      </LoaderWrapper>\n      <p>Loader with text</p>\n      <LoaderWrapper>\n        <Loader active message='I am loading...' color='success' />\n      </LoaderWrapper>\n    </Card>\n  )\n}\n\nexport default LoaderStyleguide\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport ButtonStyleGuide from './ButtonStyleGuide'\nimport CardStyleGuide from './CardStyleGuide'\nimport TableStyleGuide from './TableStyleGuide'\nimport LabelStyleGuide from './LabelStyleGuide'\nimport BadgeStyleGuide from './BadgeStyleGuide'\nimport FormStyleGuide from './FormStyleGuide'\nimport ActionPopoverStyleGuide from './ActionPopoverStyleGuide'\nimport EllipsisMenuStyleGuide from './EllipsisMenuStyleGuide'\nimport BreadcrumbsStyleGuide from './BreadcrumbsStyleGuide'\nimport TooltipStyleGuide from './TooltipStyleGuide'\nimport ToasterStyleGuide from './ToasterStyleGuide'\nimport Breadcrumbs from '../Breadcrumbs'\nimport LoaderStyleguide from './LoaderStyleGuide'\n\nconst Container = styled.div`\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  justify-content: space-between;\n`\n\nconst NavBar = styled.nav`\n  width: 200px;\n  height: 100%;\n  background-color: ${(props) => props.theme.text};\n  box-shadow: 5px 0px 10px 1px rgba(0, 0, 0, 0.15);\n  padding: 32px 64px;\n  z-index: 1;\n`\n\nconst NavLinkList = styled.ul`\n  display: flex\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  text-indent: 0;\n  list-style-type: none;\n`\n\nconst NavLinkListItem = styled.li`\n  flex: 1;\n  display: block;\n  margin: 24px 0px;\n\n  & a,\n  & a:visited,\n  & a:active,\n  & a:hover {\n    text-transform: uppercase;\n    color: ${(props) => props.theme.lightText} !important;\n    text-decoration: none;\n    letter-spacing: 2px;\n  }\n`\n\nconst Content = styled.div`\n  flex: 1;\n  padding: 16px 32px;\n  height: 100%;\n  overflow: auto;\n  background: ${(props) => props.theme.background};\n`\n\nfunction StyleGuide() {\n  const guides = {\n    button: <ButtonStyleGuide />,\n    card: <CardStyleGuide />,\n    table: <TableStyleGuide />,\n    label: <LabelStyleGuide />,\n    badge: <BadgeStyleGuide />,\n    form: <FormStyleGuide />,\n    action: <ActionPopoverStyleGuide />,\n    breadcrumbs: <BreadcrumbsStyleGuide />,\n    tooltip: <TooltipStyleGuide />,\n    ellipsis: <EllipsisMenuStyleGuide />,\n    loader: <LoaderStyleguide />,\n    toaster: <ToasterStyleGuide />\n  }\n\n  function renderNavLinks() {\n    return Object.entries(guides).map(([id, component]) => {\n      return (\n        <NavLinkListItem key={id}>\n          <a href={`#${id}`}>{id}</a>\n        </NavLinkListItem>\n      )\n    })\n  }\n\n  function renderGuides() {\n    return Object.entries(guides).map(([id, component]) => {\n      return (\n        <div id={id} key={id}>\n          {component}\n        </div>\n      )\n    })\n  }\n\n  return (\n    <React.Fragment>\n      <Container>\n        <NavBar>\n          <NavLinkList>{renderNavLinks()}</NavLinkList>\n        </NavBar>\n        <Content>\n          <Breadcrumbs>\n            <a href='/'>Home</a>\n            <span className='active'>Style Guide</span>\n          </Breadcrumbs>\n          <h1>Style Guide</h1>\n          {renderGuides()}\n        </Content>\n      </Container>\n    </React.Fragment>\n  )\n}\n\nexport default StyleGuide\n","import React, { useContext } from 'react'\n\nconst EnvContext = React.createContext({})\n\nexport const useEnv = (key) => useContext(EnvContext)[`REACT_APP_${key}`]\nexport default EnvContext\n","import React, { useState, useRef } from 'react'\nimport styled from 'styled-components'\nimport { rgba } from 'polished'\n\nimport Dropdown from './Dropdown'\nimport { useFetch } from '../Fetch'\n\nconst Selected = styled('div')`\n  flex: 1;\n  width: 100%;\n  border: 2px solid ${(props) => rgba(props.theme.text, 0.4)};\n  padding: 8px 16px;\n  font-size: 13px;\n  border-radius: 5px;\n  color: ${(props) => rgba(props.theme.text, 0.4)};\n`\n\nconst StyledLink = styled('a')`\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  line-height: 48px;\n  width: 100%;\n  & > svg {\n    margin-right: 16px;\n  }\n  & > span {\n    flex: 1;\n  }\n`\n\nfunction DefaultResultRenderer(result) {\n  function getText() {\n    if (!result) {\n      return []\n    }\n\n    if (result.name) {\n      return result.name\n    }\n\n    if (result.name_translations) {\n      return result.name_translations.en\n    }\n\n    if (result.title) {\n      return result.title\n    }\n\n    if (result.title_translations) {\n      return result.title_translations.en\n    }\n\n    return result || '&nbsp;'\n  }\n\n  return <span>{getText()}</span>\n}\n\nfunction Autocomplete({ onSelect, url, value, resultRenderer, placeholder }) {\n  const [query, setQuery] = useState('')\n  const [timer, setTimer] = useState(null)\n  const [search, setSearch] = useState()\n  const [querying, setQuerying] = useState()\n  const [open, setOpen] = useState(false)\n  const [results, setResults] = useState([])\n  const inputRef = useRef(null)\n\n  function executeQuery(e) {\n    setQuery(e.target.value)\n    if (timer) {\n      clearTimeout(timer)\n    }\n\n    const newTimer = setTimeout(() => {\n      if (e.target.value.length >= 3) {\n        setSearch(e.target.value)\n      }\n    }, 500)\n    setTimer(newTimer)\n  }\n\n  function renderResults() {\n    const renderer = resultRenderer || DefaultResultRenderer\n    return results.map((result) => (\n      <StyledLink\n        href='/'\n        key={result.id || results.indexOf(result)}\n        onClick={(e) => {\n          e.preventDefault()\n          selectResult(result)\n        }}\n        onMouseDown={(e) => {\n          e.preventDefault()\n          selectResult(result)\n        }}\n      >\n        {renderer(result)}\n      </StyledLink>\n    ))\n  }\n\n  function startQuerying() {\n    setQuerying(true)\n    onSelect(null)\n    setTimeout(() => {\n      inputRef.current.focus()\n      positionPopup()\n    })\n  }\n\n  function renderSelected() {\n    const renderer = resultRenderer || DefaultResultRenderer\n    return (\n      <Selected onClick={() => startQuerying()}>\n        {value ? renderer(value) : placeholder || 'Click to search'}\n      </Selected>\n    )\n  }\n\n  function selectResult(result) {\n    onSelect(result)\n    setOpen(false)\n    setQuerying(false)\n  }\n\n  function applyResults(data) {\n    let results = data\n    if (data.results) {\n      results = data.results\n    }\n    setResults(results)\n    setOpen(true)\n  }\n\n  function positionPopup() {\n    const menu = inputRef.current.parentElement.querySelector('nav')\n\n    const { top, left, bottom } = inputRef.current.getBoundingClientRect()\n    const { width, height } = menu.getBoundingClientRect()\n\n    let newTop = bottom + 5\n    let newLeft = left\n    const maxHeight =\n      document.documentElement.clientHeight - newTop - menu.clientHeight - 5\n\n    if (newTop + height > document.documentElement.clientHeight) {\n      newTop = top - height\n    }\n\n    if (newLeft + width > document.documentElement.clientWidth) {\n      newLeft = left - width\n    }\n\n    menu.style.left = `${newLeft}px`\n    menu.style.top = `${newTop}px`\n    menu.style.maxHeight = `${maxHeight}px`\n  }\n\n  function closeMenu() {\n    setTimeout(() => {\n      setOpen(false)\n      setQuerying(false)\n    })\n  }\n\n  const encodedQuery = encodeURIComponent(search)\n  useFetch(`${url}?q=${encodedQuery}&query=${encodedQuery}`, applyResults, [\n    search\n  ])\n\n  // TODO: Keydown handler for esc to close query\n  return (\n    <React.Fragment>\n      {!querying ? renderSelected() : []}\n      {querying ? (\n        <input\n          type='text'\n          ref={inputRef}\n          value={query}\n          placeholder={placeholder}\n          onChange={executeQuery}\n          onBlur={closeMenu}\n        />\n      ) : (\n        []\n      )}\n      <Dropdown open={open}>{renderResults()}</Dropdown>\n    </React.Fragment>\n  )\n}\n\nexport default Autocomplete\n","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'\n\nimport ButtonWithIcon from './ButtonWithIcon'\nimport Dropdown from './Dropdown'\n\nconst Container = styled('div')`\n  display: flex;\n\n  & button {\n    flex: 1;\n  }\n`\n\nfunction DropdownButton({ children, disabled, label, className }) {\n  const [open, setOpen] = useState(false)\n  const container = useRef(null)\n\n  useEffect(() => {\n    const handler = (e) => {\n      if (open && container.current && !container.current.contains(e.target)) {\n        setOpen(false)\n      }\n    }\n\n    document.addEventListener('click', handler)\n    return () => document.removeEventListener('click', handler)\n  })\n\n  function openDropdown(event) {\n    if (disabled) {\n      return\n    }\n\n    const container = event.currentTarget\n    setOpen(!open)\n    if (open) {\n      return\n    }\n\n    // Need to wait for the browser to render to get menu dimensions\n    setTimeout(() => positionMenu(container))\n  }\n\n  /* TODO: Use refs instead of currentTarget and queries.\n   *       I tried doing this here but ran into trouble\n   *       with forwardedRefs in children. Need to research\n   *       how other libraries do it.\n   */\n  function positionMenu(container) {\n    const menu = container.querySelector('nav')\n\n    const { top, left, bottom, right } = container.getBoundingClientRect()\n    const { width, height } = menu.getBoundingClientRect()\n\n    let newTop = bottom - 5\n    let newLeft = right - width + 5\n\n    if (newTop + height > document.documentElement.clientHeight) {\n      newTop = top - height\n    }\n\n    if (newLeft + width > document.documentElement.clientWidth) {\n      newLeft = left - width\n    }\n\n    menu.style.left = `${newLeft}px`\n    menu.style.top = `${newTop}px`\n  }\n\n  return (\n    <Container\n      className={className}\n      ref={container}\n      onClick={(e) => openDropdown(e)}\n      role='button'\n    >\n      <ButtonWithIcon icon={faCaretDown} disabled={disabled}>\n        {label}\n      </ButtonWithIcon>\n      <Dropdown className='dropdown-menu' open={open} role='navigation'>\n        {children}\n      </Dropdown>\n    </Container>\n  )\n}\n\nexport default DropdownButton\n","import { createGlobalStyle } from 'styled-components'\nimport { normalize } from 'styled-normalize'\n\n/**\n * Global CSS stylesheet for all components exported by this package\n */\n\n// Can't export default, createGlobalStyle doesn't return a function\nexport const GlobalStyle = createGlobalStyle`\n  ${normalize}\n\n  // You can continue writing global styles here\n  .exported-component {\n    padding: 0;\n    font-family: \"Merriweather Sans\", -apple-system, BlinkMacSystemFont,\n      'Segoe UI', 'Roboto', 'Oxygen','Ubuntu', 'Cantarell', 'Fira Sans',\n      'Droid Sans', 'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    color: #000;\n    font-size: 16px;\n    box-sizing: content-box !important;\n  }\n  .exported-component *, .exported-component *::before, .exported-component *::after {\n    box-sizing: content-box !important;\n  }\n\n  .exported-component h1, .exported-component h2, .exported-component h3, .exported-component h4, .exported-component h5, .exported-component h6 {\n    color: ${(props) => props.theme.text};\n    text-transform: uppercase;\n    font-weight: 700 !important;\n  }\n\n  .exported-component h1 {\n    font-weight: 700;\n    font-size: 24px;\n    margin: 32px 0;\n  }\n\n  .exported-component h3 {\n    display: block;\n    font-size: 1.17em;\n    margin-block-start: 1em;\n    margin-block-end: 1em;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n  }\n\n  .exported-component a, .exported-component a:visited, .exported-component a:active, .exported-component a:hover {\n    text-decoration: none;\n    color: ${(props) => props.theme.secondary};\n  }\n\n  .exported-component a:hover {\n    text-decoration: underline;\n  }\n\n  .exported-component span.pre {\n    display: inline-block;\n    color: #e41f5d;\n    background: #ececec;\n    border: 1px solid #dcdcdc;\n    border-radius: 5px;\n    padding: 2px 4px;\n    font-family: monospace;\n  }\n\n\n  .exported-component .primary {\n    color: ${(props) => props.theme.primary};\n  }\n\n  .exported-component .secondary {\n    color: ${(props) => props.theme.secondary};\n  }\n`\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport {\n  faTimesCircle,\n  faInfoCircle,\n  faCheckCircle\n} from '@fortawesome/free-solid-svg-icons'\n\nimport Toaster from './Toaster'\nimport ToasterContext from './ToasterContext'\n\nconst ICONS = {\n  success: faCheckCircle,\n  error: faTimesCircle,\n  info: faInfoCircle\n}\n\nconst ToastersDisplay = styled.div`\n  position: fixed;\n  bottom: 10%;\n  right: 10%;\n  left: calc(${(props) => props.theme.navbarWidth}px + 10%);\n  z-index: 999;\n`\n\nfunction ToasterViewport() {\n  const { toasters, dismiss } = useContext(ToasterContext)\n  function renderToaster({ type, key, message }) {\n    return (\n      <Toaster\n        type={type}\n        icon={ICONS[type]}\n        key={key}\n        uid={key}\n        onDismiss={() => dismiss(key)}\n      >\n        {message}\n      </Toaster>\n    )\n  }\n  return (\n    <ToastersDisplay>\n      {toasters.map((entry) => renderToaster(entry))}\n    </ToastersDisplay>\n  )\n}\n\nexport default ToasterViewport\n","import React, { useState } from 'react'\nimport ToasterViewport from './ToasterViewport'\nimport ToasterContext from './ToasterContext'\n\nlet nextKey = 0\nfunction ToasterManager({ children }) {\n  const [toasters, setToasters] = useState([])\n\n  function dismiss(key, toasters) {\n    const entry = toasters.find((entry) => entry.key === key)\n    if (toasters.indexOf(entry) === -1) {\n      return\n    }\n\n    const newToasters = toasters.filter((entry) => entry.key !== key)\n    setToasters(newToasters)\n  }\n\n  function buildToaster(message, type) {\n    const entry = {\n      key: parseInt(nextKey),\n      message,\n      type\n    }\n    nextKey++\n    setToasters([entry, ...toasters])\n  }\n\n  function success(message) {\n    return buildToaster(message, 'success')\n  }\n\n  function info(message) {\n    return buildToaster(message, 'info')\n  }\n\n  function error(message) {\n    return buildToaster(message, 'error')\n  }\n\n  return (\n    <ToasterContext.Provider\n      value={{ toasters, success, info, error, dismiss }}\n    >\n      <ToasterViewport />\n      {children}\n    </ToasterContext.Provider>\n  )\n}\n\nexport default ToasterManager\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons'\n\nconst Panel = styled.div`\n  background: ${(props) => props.theme.background};\n  margin: 8px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nconst TitleContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  & h3 {\n    flex: 1\n    margin: 0;\n    padding: 0 16px;\n  }\n`\nconst CaretContainer = styled.span`\n  margin: 0 8px;\n`\n\nconst Content = styled.div`\n  display: none;\n  overflow: hidden;\n\n  &.open {\n    display: block;\n    padding: 8px 16px 32px 16px;\n  }\n`\n\nfunction FoldablePanel({ title, children, startOpen }) {\n  const [open, setOpen] = useState(startOpen)\n\n  return (\n    <Panel>\n      <TitleContainer onClick={() => setOpen(!open)}>\n        <h3>{title}</h3>\n        <CaretContainer>\n          <FontAwesomeIcon icon={open ? faCaretUp : faCaretDown} />\n        </CaretContainer>\n      </TitleContainer>\n      <Content className={open ? 'open' : ''}>{children}</Content>\n    </Panel>\n  )\n}\n\nexport default FoldablePanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { rgba } from 'polished'\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  margin: 16px 32px 24px 32px;\n`\n\nconst InputsContainer = styled.div`\n  flex: 1;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  & input,\n  & select,\n  & textarea {\n    flex: 1;\n    display: block;\n    width: 100%;\n    border: 2px solid ${(props) => rgba(props.theme.text, 0.4)};\n    padding: 8px 16px;\n    font-size: 13px;\n    border-radius: 5px;\n\n    &::placeholder {\n      color: ${(props) => rgba(props.theme.text, 0.4)};\n    }\n\n    &:focus,\n    &:active {\n      outline: none;\n      flex: 1;\n      width: auto;\n      border: 2px solid ${(props) => rgba(props.theme.text, 0.7)};\n    }\n  }\n\n  & > :not(:first-child) {\n    margin-left: 16px;\n  }\n`\n\nconst Label = styled.label`\n  display: block;\n  font-weight: bold;\n  font-size: 14px;\n  text-transform: uppercase;\n  color: ${(props) => props.theme.tableHeaders};\n  margin-bottom: 10px;\n`\n\nfunction FormField({ name, label, children }) {\n  return React.createElement(\n    Container,\n    null,\n    React.createElement(\n      Label,\n      {\n        htmlFor: name\n      },\n      label\n    ),\n    React.createElement(InputsContainer, null, children)\n  )\n}\n\nexport default FormField\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst RadioInputLabelStyle = styled.label`\n  color: black;\n  display: flex;\n  font-weight: 400;\n  font-size: 0.75rem;\n  line-height: 2rem;\n  align-items: center;\n`\n\nconst RadioInputInputStyle = styled.input.attrs({ type: 'radio' })`\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n\n  width: 16px;\n  height: 16px;\n  margin-right: 8px;\n  position: relative;\n  border-radius: 100%;\n  border: 2px solid ${(props) => props.theme.secondary};\n\n  :checked::before {\n    content: '';\n    top: 1px;\n    left: 1px;\n    width: 10px;\n    height: 10px;\n    position: absolute;\n    border-radius: 100%;\n    background-color: ${(props) => props.theme.secondary};\n  }\n\n  :focus {\n    outline: none;\n  }\n`\n\nconst RadioInputTextStyle = styled.label`\n  margin-left: 0.5rem;\n  margin-right: 1.5rem;\n`\n\nfunction RadioInput({ name, value, checked, onCheck }) {\n  return (\n    <RadioInputLabelStyle>\n      <RadioInputInputStyle\n        name={name}\n        value={value}\n        checked={checked}\n        onChange={onCheck}\n      />\n      <RadioInputTextStyle>{value}</RadioInputTextStyle>\n    </RadioInputLabelStyle>\n  )\n}\n\nexport default RadioInput\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst SwitchLabelStyle = styled.label`\n  position: relative;\n  display: inline-block;\n  width: 32px;\n  height: 16px;\n`\n\nconst SwitchCheckboxStyle = styled.input.attrs({ type: 'checkbox' })`\n  opacity: 0;\n  width: 0;\n  height: 0;\n\n  :checked ~ span {\n    background-color: ${(props) => props.theme.secondary};\n  }\n\n  :focus ~ span {\n    box-shadow: 0 0 1px ${(props) => props.theme.secondary};\n  }\n\n  :checked + span:before {\n    -webkit-transform: translateX(16px);\n    -ms-transform: translateX(16px);\n    transform: translateX(16px);\n    border: 1px solid ${(props) => props.theme.secondary};\n  }\n`\n\nconst SwitchSliderStyle = styled.span`\n  position: absolute;\n  cursor: pointer;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: #ccc;\n  -webkit-transition: 0.4s;\n  transition: 0.4s;\n  border-radius: 34px;\n\n  :before {\n    position: absolute;\n    content: '';\n    height: 16px;\n    width: 16px;\n    left: 0px;\n    bottom: 0px;\n    background-color: white;\n    -webkit-transition: 0.4s;\n    transition: 0.4s;\n    border-radius: 50%;\n  }\n`\n\nfunction Switch({ checked, onCheck }) {\n  return (\n    <SwitchLabelStyle>\n      <SwitchCheckboxStyle checked={checked} onChange={onCheck} />\n      <SwitchSliderStyle />\n    </SwitchLabelStyle>\n  )\n}\n\nexport default Switch\n","import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { VavatoTheme, StyleGuide, ToasterManager } from 'vavato-ui'\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={VavatoTheme}>\n      <ToasterManager>\n        <StyleGuide />\n      </ToasterManager>\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}